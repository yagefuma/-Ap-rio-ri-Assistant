package get_data_for_apriori;



import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;


/*
 * 作用：提取每个app的权限，并查看它们的恶意权限组合，根据恶意权限组合给他们分类，窃取地理位置、窃取短信、窃取通话...等，并复制apk到相应的文件夹中，
 * **********这里要特别注意的是文件夹的名字，和磁盘的名字不要写错了，因为数据在移动硬盘上，在不同的电脑上移动硬盘的命名********
 * 1.获取某个文件夹下所有文件，遍历它，进行上述操作
*/
public class Classfy_Malware {
	private static File file = new File("D:apriori.txt");  //存放permission的文件
	private static String apkName;  //apk名字
	private static  String cmd; //cmd语句执行aapt并保存执行结果
	
	private static String sourceFile ;
	private static final String part_destinationDirectory = "G:/loading_system/android/virus_getprivace/";
	private static HashSet<Integer> set = new HashSet<Integer>();  //存文件夹代号，1——13
	private static int[] array = new int[127];
	public static void main(String[] args){
		File rootDirectory = new File("G:/loading_system/android/virus_getprivace/");
		File[] files = rootDirectory.listFiles();
		for(int i = 0 ; i < files.length ; i++){
			if(!files[i].isFile()){
				System.out.println("not File,"+files[i].getName());
				continue;
			}else{
				apkName = files[i].getName();
				sourceFile = files[i].getAbsolutePath();
				cmd = "cmd /k aapt dump permissions G:/loading_system/android/virus_getprivace/" + apkName + " -t > D:apriori.txt";
				
				
				//第一步：在cmd执行aapt命令,把申请的权限保存到file文件
				getPermissions();

				//第二步，读取file文件，给数组array组赋值，代表的是该app的permissions
				assign_Array(file);
				
				//第三部：复制apk到相应文件夹
				copyFile();
				
				System.out.println("-------------分割线----------------");
				
				//清理干净存储set和数组，以便下次循环使用
				set.clear();
				for(int j = 0 ; j < array.length ; j++){
					array[j] = 0;
				}
			}
		}
		
		
	}
	
	private static void getPermissions() {
		// TODO Auto-generated method stub
		Runtime rt = Runtime.getRuntime();
		Process p = null ;
		try {
			 p = rt.exec(cmd);
			 new Thread().sleep(5000);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally{
			if(p!=null){
				p.destroy();
			}
		}
	}

	//给数组的某一行赋值，一个应用代表一行
	public static void assign_Array(File file){
		String temp = null ;
		FileReader fileReader = null ;
		BufferedReader br = null;
		try {
			fileReader = new FileReader(file);
			br = new BufferedReader(fileReader);
			while((temp = br.readLine())!=null){
				for(int i = 0 ;i<LocalData.permissions.length ; i++){
					if(temp.indexOf(LocalData.permissions[i]) > -1){
						array[i] = 1 ;
					}
				}
			}
			br.close();
			fileReader.close();
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally{
			
		}
		//输出应用的恶意前组合，并保存其编号到set
		permissionsOutput(array);
	}
	
	private static void permissionsOutput(int[] is) {
		// TODO Auto-generated method stub
		System.out.println("array_length:" + is.length);
		    if((is[11]==1)&&(is[17]==1)&&(is[3]==1)){
				System.out.println("通话录音" + "1");	
				set.add(1);
			}
		   /* if((is[32]==1)&&(is[17]==1)&&(is[3]==1)){
				System.out.println("**" + "2");	
				LocalData.array2[1]++;
			}
		    if(is[31]==1){
				System.out.println("**" + "3");
				LocalData.array2[2]++;
			}*/
		    if((is[32]==1)&&(is[3]==1)){
				System.out.println("外拨电话——网" + "2");
				set.add(2);
			}
		    if((is[32]==1)&&(is[26]==1)){
				System.out.println("外拨电话——信" + "2");
				set.add(2);
			}
		    if((is[33]==1)&&(is[3]==1)){
				System.out.println("通话记录——网" + "3");
				set.add(3);
			}
		    if((is[33]==1)&&(is[26]==1)){
				System.out.println("通话记录——信" + "3");
				set.add(3);
			}
		    if((is[24]==1)&&(is[3]==1)){
				System.out.println("联系人——网" + "4");
				set.add(4);
			}
		    if((is[24]==1)&&(is[26]==1)){
				System.out.println("联系人——信" + "4");
				set.add(4);
			}
		    if((is[27]==1)&&(is[26]==1)){
				System.out.println("收彩信——信" + "5");
				set.add(5);	
			}
		    if((is[27]==1)&&(is[3]==1)){
				System.out.println("收彩信——网" + "5");
				set.add(5);	
			}
		    if((is[28]==1)&&(is[3]==1)){
				System.out.println("收短信——网" + "6");
				set.add(6);	
			}
		    if((is[28]==1)&&(is[26]==1)){
				System.out.println("收短信——信" + "6");
				set.add(6);	
			}
		    if((is[29]==1)&&(is[3]==1)){
				System.out.println("读短彩信——网" + "5+6");
				set.add(5);
				set.add(6);	
			}
		    if((is[29]==1)&&(is[26]==1)){
				System.out.println("读短彩信——信" + "5+6");
				set.add(5);
				set.add(6);
			}
		    if((is[49]==1)&&(is[3]==1)){
				System.out.println("系统日志——网" + "7");
				set.add(7);
			}
		    if((is[49]==1)&&(is[26]==1)){
				System.out.println("系统日志——信" + "7");
				set.add(7);
			}
		    if((is[22]==1)&&(is[3]==1)){
				System.out.println("profile——网" + "8");
				set.add(8);
			}
		    if((is[22]==1)&&(is[26]==1)){
				System.out.println("profile——信" + "8");
				set.add(8);
			}
		    if((is[53]==1)&&(is[3]==1)){
				System.out.println("书签历史记录——网" + "9");
				set.add(9);
			}
		    if((is[53]==1)&&(is[26]==1)){
				System.out.println("书签历史记录——信" + "9");
				set.add(9);
			}
		    if((is[5]==1)&&(is[3]==1)){
				System.out.println("内存卡——网" + "10");
				set.add(10);
			}
		    if((is[17]==1)&&(is[3]==1)){
				System.out.println("电话信息——网" + "11");
				set.add(11);
			}
		    if((is[17]==1)&&(is[26]==1)){
				System.out.println("电话信息——信" + "11");
				set.add(11);
			}
		    if((is[54]==1)&&(is[3]==1)){
				System.out.println("日程——网" + "12");
				set.add(12);
			}
		    if((is[54]==1)&&(is[26]==1)){
				System.out.println("日程——信" + "12");
				set.add(12);
			}
		    if((is[0]==1)&&(is[3]==1)){
				System.out.println("精确位置——网" + "13");
				set.add(13);
			}
		    if((is[1]==1)&&(is[3]==1)){
				System.out.println("粗略位置——网" + "13");
				set.add(13);
			}
		    if((is[0]==1)&&(is[26]==1)){
				System.out.println("精确位置——信" + "13");
				set.add(13);
			}
		    if((is[1]==1)&&(is[26]==1)){
				System.out.println("粗略位置——信" + "13");
				set.add(13);
			}
	}
	
	private static void copyFile() {
		// TODO Auto-generated method stub
		int i = 0;
		Iterator<Integer> it = set.iterator();
		while(it.hasNext()){
			i = it.next();
			System.out.println("case:" + i);
			switch(i){
			   case 1: Tools.copyFile(sourceFile, part_destinationDirectory + "1get_callvoice/", apkName);break;
			   case 2: Tools.copyFile(sourceFile, part_destinationDirectory + "2get_outcall_number/", apkName); break;
			   case 3: Tools.copyFile(sourceFile, part_destinationDirectory + "3get_call_record/", apkName);break;
			   case 4: Tools.copyFile(sourceFile, part_destinationDirectory + "4get_contacts/", apkName);	break;
			   case 5: Tools.copyFile(sourceFile, part_destinationDirectory + "5get_mms/", apkName);	break;
			   case 6: Tools.copyFile(sourceFile, part_destinationDirectory + "6get_sms/", apkName);	break;
			   case 7: Tools.copyFile(sourceFile, part_destinationDirectory + "7get_log_info/", apkName);break;
			   case 8: Tools.copyFile(sourceFile, part_destinationDirectory + "8get_profile_info/", apkName);break;
			   case 9: Tools.copyFile(sourceFile, part_destinationDirectory + "9get_history_and_bookmarkets/", apkName);break;
			   case 10: Tools.copyFile(sourceFile, part_destinationDirectory + "10get_sdcard_file/", apkName);break;
			   case 11: Tools.copyFile(sourceFile, part_destinationDirectory + "11get_phone_info/", apkName);break;
			   case 12: Tools.copyFile(sourceFile, part_destinationDirectory + "12get_calender/", apkName);break;
			   case 13: Tools.copyFile(sourceFile, part_destinationDirectory + "13get_location/", apkName);break;
			}
		}
	}

}

